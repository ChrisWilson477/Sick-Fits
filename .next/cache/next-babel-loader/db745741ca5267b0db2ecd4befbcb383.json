{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/components/Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_ORDER_MUTATION($token: String!) {\\n      checkout(token; $token) {\\n          id \\n          charge\\n          total\\n          items{\\n              id \\n              name\\n          }\\n      }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/client';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport gql from 'graphql-tag';\nimport nProgress from 'nprogress';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport SickButton from './styles/SickButton';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      graphQLError = _useMutation2[1].error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              console.log('pressed');\n              nProgress.start();\n              _context.next = 6;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 6:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod);\n\n              if (!error) {\n                _context.next = 14;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 14:\n              _context.next = 16;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id\n                }\n              });\n\n            case 16:\n              order = _context.sent;\n              setLoading(false);\n              nProgress.done();\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: [\" \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: [\" \", graphQLError.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"XEbF03Na/UBenDMH3JozVN2ndyU=\", false, function () {\n  return [useStripe, useElements, useMutation];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport default Checkout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/components/Checkout.js"],"names":["useMutation","CardElement","Elements","useElements","useStripe","loadStripe","gql","nProgress","useState","styled","SickButton","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","checkout","graphQLError","handleSubmit","e","preventDefault","console","log","start","createPaymentMethod","type","card","getElement","paymentMethod","done","variables","token","id","order","fontSize","message","Checkout"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,yBALP;AAMA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,IAAMC,kBAAkB,GAAGF,MAAM,CAACG,IAAV;AAAA;AAAA;AAAA,8IAAxB;KAAMD,kB;AASN,IAAME,qBAAqB,GAAGP,GAAH,mBAA3B;AAcA,IAAMQ,SAAS,GAAGT,UAAU,CAACU,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AACA,SAASC,YAAT,GAAwB;AAAA;;AAAA,kBACIV,QAAQ,EADZ;AAAA,MACfW,KADe;AAAA,MACRC,QADQ;;AAAA,mBAEQZ,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEfa,OAFe;AAAA,MAENC,UAFM;;AAGtB,MAAMC,MAAM,GAAGnB,SAAS,EAAxB;AACA,MAAMoB,QAAQ,GAAGrB,WAAW,EAA5B;;AAJsB,qBAKsBH,WAAW,CACrDa,qBADqD,CALjC;AAAA;AAAA,MAKfY,QALe;AAAA,MAKIC,YALJ,oBAKHP,KALG;;AAAA,WAQPQ,YARO;AAAA;AAAA;;AAAA;AAAA,6EAQtB,iBAA4BC,CAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,CAAC,CAACC,cAAF;AACAP,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAxB,cAAAA,SAAS,CAACyB,KAAV;AAJF;AAAA,qBAMyCT,MAAM,CAACU,mBAAP,CAA2B;AAChEC,gBAAAA,IAAI,EAAE,MAD0D;AAEhEC,gBAAAA,IAAI,EAAEX,QAAQ,CAACY,UAAT,CAAoBnC,WAApB;AAF0D,eAA3B,CANzC;;AAAA;AAAA;AAMUkB,cAAAA,KANV,yBAMUA,KANV;AAMiBkB,cAAAA,aANjB,yBAMiBA,aANjB;AAUEP,cAAAA,OAAO,CAACC,GAAR,CAAYM,aAAZ;;AAVF,mBAYMlB,KAZN;AAAA;AAAA;AAAA;;AAaIC,cAAAA,QAAQ,CAACD,KAAD,CAAR;AACAZ,cAAAA,SAAS,CAAC+B,IAAV;AAdJ;;AAAA;AAAA;AAAA,qBAkBsBb,QAAQ,CAAC;AAC3Bc,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,KAAK,EAAEH,aAAa,CAACI;AADZ;AADgB,eAAD,CAlB9B;;AAAA;AAkBQC,cAAAA,KAlBR;AAwBEpB,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAf,cAAAA,SAAS,CAAC+B,IAAV;;AAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARsB;AAAA;AAAA;;AAmCtB,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEX,YAA9B;AAAA,eACGR,KAAK,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAEwB,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,sBAA8BxB,KAAK,CAACyB,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,EAEGlB,YAAY,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAEiB,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,sBAA8BjB,YAAY,CAACkB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFnB,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA3CQ1B,Y;UAGQd,S,EACED,W,EAC2BH,W;;;MALrCkB,Y;;AA6CT,SAAS2B,QAAT,GAAoB;AAClB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAE/B,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQ+B,Q;AAQT,eAAeA,QAAf","sourcesContent":["import { useMutation } from '@apollo/client';\nimport {\n  CardElement,\n  Elements,\n  useElements,\n  useStripe,\n} from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport gql from 'graphql-tag';\nimport nProgress from 'nprogress';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport SickButton from './styles/SickButton';\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n      checkout(token; $token) {\n          id \n          charge\n          total\n          items{\n              id \n              name\n          }\n      }\n  }\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [checkout, { error: graphQLError }] = useMutation(\n    CREATE_ORDER_MUTATION\n  );\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    console.log('pressed');\n    nProgress.start();\n\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n    console.log(paymentMethod);\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    }\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id,\n      },\n    });\n\n    setLoading(false);\n    nProgress.done();\n  }\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      {error && <p style={{ fontSize: 12 }}> {error.message}</p>}\n      {graphQLError && <p style={{ fontSize: 12 }}> {graphQLError.message}</p>}\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}