{"ast":null,"code":"import _slicedToArray from \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/lib/cartState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext } from 'react';\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  // This is our own custom proivder\n  // to store data(state) and functionality (updaters)\n  // anyone can access it via the consumer\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      cartOpen = _useState2[0],\n      setCartOpen = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen: cartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n} // make custom hook for accessing the cart local state\n\n\n_s(CartStateProvider, \"xe1WncxGrJWPKk54fyWehQszVXg=\");\n\n_c = CartStateProvider;\n\nfunction useCart() {\n  _s2();\n\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s2(useCart, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { CartStateProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartStateProvider\");","map":{"version":3,"sources":["/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/lib/cartState.js"],"names":["createContext","useContext","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","useState","cartOpen","setCartOpen","useCart","all"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AAEA,IAAMC,iBAAiB,gBAAGF,aAAa,EAAvC;AACA,IAAMG,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,OAAyC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACvC;AACA;AACA;AAHuC,kBAKPC,QAAQ,CAAC,KAAD,CALD;AAAA;AAAA,MAKhCC,QALgC;AAAA,MAKtBC,WALsB;;AAOvC,sBACE,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAARA;AAAF,KAA3B;AAAA,cAA0CF;AAA1C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;;;GAZSD,iB;;KAAAA,iB;;AAaT,SAASK,OAAT,GAAmB;AAAA;;AACjB,MAAMC,GAAG,GAAGV,UAAU,CAACC,iBAAD,CAAtB;AACA,SAAOS,GAAP;AACD;;IAHQD,O;;AAIT,SAASL,iBAAT,EAA4BK,OAA5B","sourcesContent":["import { createContext, useContext } from 'react';\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({ children }) {\n  // This is our own custom proivder\n  // to store data(state) and functionality (updaters)\n  // anyone can access it via the consumer\n\n  const [cartOpen, setCartOpen] = useState(false);\n\n  return (\n    <LocalStateProvider value={{ cartOpen }}>{children}</LocalStateProvider>\n  );\n}\n\n// make custom hook for accessing the cart local state\nfunction useCart() {\n  const all = useContext(LocalStateContext);\n  return all;\n}\nexport { CartStateProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}