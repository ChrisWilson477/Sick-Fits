{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  grid-gap: 60px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS_QUERY {\\n    allProducts {\\n      id\\n      name\\n      price\\n      description\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductList = styled.div(_templateObject2());\nexport default function Products() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data, error, loading);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.name\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["useQuery","gql","styled","ALL_PRODUCTS_QUERY","ProductList","div","Products","data","error","loading","console","log","message","allProducts","map","product","name","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,kBAAkB,GAAGF,GAAH,mBAAxB;AAiBA,IAAMG,WAAW,GAAGF,MAAM,CAACG,GAAV,oBAAjB;AAMA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,kBACAN,QAAQ,CAACG,kBAAD,CADR;AAAA,MACzBI,IADyB,aACzBA,IADyB;AAAA,MACnBC,KADmB,aACnBA,KADmB;AAAA,MACZC,OADY,aACZA,OADY;;AAEjCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB,EAAyBC,OAAzB;;AACA,MAAIA,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAID,KAAJ,EAAW;AACT;AAAA;AAAA,4BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AACD,sBACE;AAAA,2BACE;AAAA,gBACGL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,4BACpB;AAAA,oBAAqBA,OAAO,CAACC;AAA7B,WAAQD,OAAO,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,iBADoB;AAAA,OAArB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnBuBX,Q;UACWN,Q;;;KADXM,Q","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\n\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst ProductList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n`;\n\nexport default function Products() {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\n  console.log(data, error, loading);\n  if (loading) {\n    return <p>Loading... </p>;\n  }\n\n  if (error) {\n    <p>Error: {error.message}</p>;\n  }\n  return (\n    <div>\n      <div>\n        {data.allProducts.map((product) => (\n          <p key={product.id}>{product.name}</p>\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}