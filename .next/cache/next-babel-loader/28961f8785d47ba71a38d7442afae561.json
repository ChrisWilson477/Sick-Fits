{"ast":null,"code":"import _slicedToArray from \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nexport default function useForm() {\n  _s();\n\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // create a state object for our inputs\n  var _useState = useState(''),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        type = _e$target.type,\n        name = _e$target.name;\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      value[0] = e.target.files;\n    }\n\n    console.log(inputs);\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, name, value)));\n  }\n\n  function resetForm() {\n    setInputs(initial);\n  }\n\n  function clearForm() {\n    var blankState = Object.fromEntries(Object.entries(inputs).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return [key, ''];\n    }));\n    console.log(blankState);\n    setInputs(blankState);\n  }\n\n  return {\n    inputs: inputs,\n    handleChange: handleChange,\n    resetForm: resetForm,\n    clearForm: clearForm\n  };\n}\n\n_s(useForm, \"wo9JRNIsi5D4lJ0dtEMNDlOLF9w=\");","map":{"version":3,"sources":["/Users/chriswilson/Documents/GitHub/Advanced-React/sick-fits/frontend/lib/useForm.js"],"names":["useState","useForm","initial","inputs","setInputs","handleChange","e","target","value","type","name","parseInt","files","console","log","resetForm","clearForm","blankState","Object","fromEntries","entries","map","key"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,OAAT,GAA+B;AAAA;;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC5C;AAD4C,kBAGhBF,QAAQ,CAAC,EAAD,CAHQ;AAAA,MAGrCG,MAHqC;AAAA,MAG7BC,SAH6B;;AAK5C,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AAAA,oBACKA,CAAC,CAACC,MADP;AAAA,QACjBC,KADiB,aACjBA,KADiB;AAAA,QACVC,IADU,aACVA,IADU;AAAA,QACJC,IADI,aACJA,IADI;;AAEvB,QAAID,IAAI,KAAK,QAAb,EAAuB;AACrBD,MAAAA,KAAK,GAAGG,QAAQ,CAACH,KAAD,CAAhB;AACD;;AACD,QAAIC,IAAI,KAAK,MAAb,EAAqB;AACnBD,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAWF,CAAC,CAACC,MAAF,CAASK,KAApB;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACAC,IAAAA,SAAS,iCACJD,MADI,2BAENO,IAFM,EAECF,KAFD,GAAT;AAID;;AAED,WAASO,SAAT,GAAqB;AACnBX,IAAAA,SAAS,CAACF,OAAD,CAAT;AACD;;AAED,WAASc,SAAT,GAAqB;AACnB,QAAMC,UAAU,GAAGC,MAAM,CAACC,WAAP,CACjBD,MAAM,CAACE,OAAP,CAAejB,MAAf,EAAuBkB,GAAvB,CAA2B;AAAA;AAAA,UAAEC,GAAF;AAAA,UAAOd,KAAP;;AAAA,aAAkB,CAACc,GAAD,EAAM,EAAN,CAAlB;AAAA,KAA3B,CADiB,CAAnB;AAGAT,IAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACAb,IAAAA,SAAS,CAACa,UAAD,CAAT;AACD;;AAED,SAAO;AACLd,IAAAA,MAAM,EAANA,MADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLU,IAAAA,SAAS,EAATA,SAHK;AAILC,IAAAA,SAAS,EAATA;AAJK,GAAP;AAMD;;GAtCuBf,O","sourcesContent":["import { useState } from 'react';\n\nexport default function useForm(initial = {}) {\n  // create a state object for our inputs\n\n  const [inputs, setInputs] = useState('');\n\n  function handleChange(e) {\n    let { value, type, name } = e.target;\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n    if (type === 'file') {\n      value[0] = e.target.files;\n    }\n    console.log(inputs);\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  }\n\n  function resetForm() {\n    setInputs(initial);\n  }\n\n  function clearForm() {\n    const blankState = Object.fromEntries(\n      Object.entries(inputs).map(([key, value]) => [key, ''])\n    );\n    console.log(blankState);\n    setInputs(blankState);\n  }\n\n  return {\n    inputs,\n    handleChange,\n    resetForm,\n    clearForm,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}